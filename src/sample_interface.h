/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp com.servicename.ifname.xml -p sample_interface -a sample_adaptor
 *
 * qdbusxml2cpp is Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef SAMPLE_INTERFACE_H_1447501130
#define SAMPLE_INTERFACE_H_1447501130

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.servicename.ifname
 */
class ComServicenameIfnameInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.servicename.ifname"; }

public:
    ComServicenameIfnameInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~ComServicenameIfnameInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QString> asyncInvoke(const QByteArray &data)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(data);
        return asyncCallWithArgumentList(QStringLiteral("asyncInvoke"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void syncSend(const QByteArray &data);
};

namespace com {
  namespace servicename {
    typedef ::ComServicenameIfnameInterface ifname;
  }
}
#endif
